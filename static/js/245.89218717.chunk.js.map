{"version":3,"file":"static/js/245.89218717.chunk.js","mappings":"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","sources":["components/ReusableComponents/Banner/Banner.tsx","components/ReusableComponents/Button/Button.tsx","components/ReusableComponents/Icon/Icon.tsx","components/ReusableComponents/Dots.tsx","components/ReusableComponents/SearchBar/SearchBar.tsx","components/ReusableComponents/TabBar.tsx","components/ReusableComponents/PopularMark/PopularMark.tsx","components/ReusableComponents/RatingStars/RatingStars.tsx","components/ReusableComponents/CoursesList/CoursesListItem.tsx","components/ReusableComponents/CoursesList/CoursesList.tsx","components/ReusableComponents/Player.tsx","components/ReusableComponents/CategorySelect.tsx","components/ReusableComponents/CourseListPreloader/CourseListPreloader.tsx","components/ReusableComponents/ModalBackDrop.tsx","components/ReusableComponents/CoursesEmptyPlugIn/CoursesEmptyPlugIn.tsx"],"sourcesContent":["import { ReactNode, Children } from 'react';\r\n\r\ninterface IProps {\r\n    children: ReactNode;\r\n    variant: 'horizontalCol' | 'horizontalRow' | 'verticalInverse' | 'vertical';\r\n    size: 'large' | 'small';\r\n}\r\n\r\nexport const Banner = ({children, variant, size}:IProps) => {\r\n\r\n    const childrenArr = Children.toArray(children);\r\n    \r\n    return (\r\n        <>\r\n            {variant === 'vertical' && size === 'large' && \r\n                <div className=\"banner-wrapper\">\r\n                    <div className=\"mb-6\">{childrenArr[0]}</div>\r\n                    <div className=\"mb-3\">{childrenArr[1]}</div>\r\n                    <div className=\"text-style__body2--regular text-Grey\">{childrenArr[2]}</div>\r\n                </div>\r\n            }\r\n\r\n            {variant === 'verticalInverse' && size === 'large' && <div className=\"banner-wrapper group py-6 pl-6 pr-12 border border-Black/10 rounded hover:bg-White cursor-pointer hover:shadow-bannerShadow hover:border-none transition-all duration-300\">\r\n                <div className=\"mb-6\">{childrenArr[0]}</div>\r\n                <div className=\"text-style__body2--regular text-Grey mb-7\">{childrenArr[2]}</div>\r\n                <div className=\"mb-3\">{childrenArr[1]}</div>\r\n            </div>}\r\n\r\n            {variant === 'horizontalRow' && size === 'large' && \r\n                <div className=\"banner-wrapper group py-7.5 px-10 bg-White rounded-xl hover:bg-Blue cursor-pointer shadow-bannerShadow transition-colors duration-300\">\r\n\r\n                    <div className=\"flex gap-5 items-center mb-6\">\r\n\r\n                        <div>{childrenArr[0]}</div>\r\n\r\n                        <div className=\"group-hover:text-White transition-colors duration-300\">{childrenArr[1]}</div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"text-style__body2--regular text-Grey group-hover:text-White transition-colors duration-300\">{childrenArr[2]}</div>\r\n                </div>\r\n            } \r\n            \r\n            {variant === 'horizontalCol' && size === 'large' && \r\n                <div className=\"banner-wrapper flex gap-4 items-start group py-9 pl-9 pr-[50px] border border-Black/10 rounded hover:bg-White cursor-pointer hover:shadow-bannerShadow hover:border-none transition-all duration-300\">\r\n                    <div className=\"[&_*]:group-hover:text-White [&_div]:group-hover:bg-Blue\">{childrenArr[0]}</div>\r\n                    <div className=\"mt-3\">\r\n                        <div >{childrenArr[1]}</div>\r\n                        <div className=\"text-style__body2--regular text-Grey mt-1\">{childrenArr[2]}</div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            }    \r\n\r\n            {variant === 'vertical' && size === 'small' && \r\n                <div className=\"banner-wrapper group bg-Black rounded-2xl p-4 flex flex-col items-center transition-all duration-300 cursor-pointer hover:-translate-y-3p  hover:shadow-xl hover:shadow-Black/50\">\r\n                    <div className=\"mb-3\">{childrenArr[0]}</div>\r\n                    <div className=\"text-White\">{childrenArr[1]}</div>\r\n                    <div className=\"text-style__body3--regular text-Grey group-hover:text-White transition-all duration-300\">{childrenArr[2]}</div>\r\n                </div>\r\n            }\r\n\r\n            {variant === 'horizontalCol' && size === 'small' && \r\n                <div className=\"banner-wrapper group bg-Black rounded-2xl p-4 flex gap-4 items-start transition-all duration-300 cursor-pointer hover:-translate-y-3p hover:animate-pulse hover:shadow-xl hover:shadow-Black/50\">\r\n                    <div>{childrenArr[0]}</div>\r\n                    <div>\r\n                        <div className=\"text-White\">{childrenArr[1]}</div>\r\n                        <div className=\"text-style__body3--regular text-Grey group-hover:text-White transition-all duration-300\">{childrenArr[2]}</div>\r\n                    </div>\r\n                </div>\r\n            }\r\n\r\n        </>\r\n    );\r\n};","import { ReactNode } from 'react';\r\nimport classNames from 'classnames';\r\nimport { FiChevronLeft } from 'react-icons/fi';\r\n\r\nexport interface IButton extends React.ComponentPropsWithoutRef<'button'> {\r\n    children?: ReactNode;\r\n\r\n    variant: 'primary' | 'secondary' | 'tertiary' | 'switchBtn';\r\n    size?: 'small' | 'normalShortcut' | 'normal' | 'medium' | 'mediumLarge' | 'large' | 'huge';\r\n    color?: 'yellow' | 'white' | 'black' | 'blue';\r\n    inverted?: boolean;\r\n\r\n    className?: string;\r\n}\r\n\r\nexport const Button = ({\r\n    children, variant, size, color,\r\n    inverted = false,\r\n    className ='', ...rest\r\n}:IButton) => {\r\n\r\n    if (variant === 'primary' &&  (color === 'white' || color === 'blue')) {\r\n        throw Error('Colors can be applied to button variant primary - yellow, black');\r\n    }\r\n    if (variant === 'primary' && (size === 'small' || size === 'medium' || size === 'mediumLarge')) {\r\n        throw Error('Sizes can be applied to button variant primary - normal, large, huge, default value - normal');\r\n    }\r\n    if (variant === 'secondary' && (size === 'large')) {\r\n        throw Error('Size - large, not applicable to the purpose of the secondary button, default value - normal');\r\n    }\r\n    if (variant === 'secondary' && (color === 'black' || color === 'blue')) {\r\n        throw Error('Colors can be applied to button variant secondary - yellow, white');\r\n    }\r\n    if (variant === 'tertiary' && (color || size)) {\r\n        throw Error('Tertiary option in a single copy of color and size. Size and color property is not required');\r\n    }\r\n    if (variant === 'switchBtn' && size) {\r\n        throw Error('SwitchBtn option in a single copy of size, size property is not required');\r\n    }\r\n    if (variant === 'switchBtn' && (color === 'black' || color === 'yellow')) {\r\n        throw Error('Colors can be applied to button variant switchBtn - blue, white');\r\n    }\r\n    if (variant !== 'switchBtn' && inverted) {\r\n        throw Error('The inverted property is only applicable to the variant - switchBtn');\r\n    }\r\n\r\n    const classes = classNames('gap-2 relative inline-block transition-all duration-300 hover:duration-300 group overflow-hidden', {\r\n\r\n        'py-1.5 px-4': size === 'small',\r\n        'py-2.5 pl-4 pr-6': size === 'normalShortcut',\r\n        'py-2.5 px-6': size === 'normal',\r\n        'py-3 px-6': size === 'medium',\r\n        'py-4 px-6': size === 'mediumLarge',\r\n        'py-4 px-9': size === 'large',\r\n        'px-20 py-4': size === 'huge',\r\n\r\n        //variant Primary  \r\n        'hover:bg-Black/2 border rounded': variant === 'primary',\r\n        'bg-YellowLight text-Black hover:text-YellowLight border-YellowLight hover:bg-tranparent': variant === 'primary' && color === 'yellow',\r\n        'bg-Black text-YellowLight border-Black hover:text-Black hover:bg-YellowLight': variant === 'primary' && color === 'black',\r\n\r\n        'text-style__body2--extraBold': variant === 'primary' && size === 'normal',\r\n        'text-style__body1--extraBold': variant === 'primary' && size === 'large',\r\n        'text-style__body1--bold rounded-xl': variant === 'primary' && size === 'huge',\r\n\r\n        //variant Secondary\r\n        'bg-transparent border rounded': variant === 'secondary',\r\n\r\n        'text-White border-White text-style__body3--bold': variant === 'secondary' && color === 'white',\r\n        'text-YellowLight border-YellowLight text-style__body2--bold': variant === 'secondary' && color === 'yellow',\r\n\r\n        //variant Tertiary        \r\n        'py-2.5 px-6 bg-GreyLight text-Blue text-style__body3--bold rounded hover:-translate-y-[1px] active:translate-y-0 hover:drop-shadow-lg active:drop-shadow-none duration-150': variant === 'tertiary',\r\n\r\n        //variant switch\r\n        'border border-Blue rounded-full text-Blue hover:bg-Blue hover:text-White p-1.5': variant === 'switchBtn' && color === 'blue',\r\n        'border border-BtnBorderGrey rounded-full text-White hover:bg-White hover:border-White hover:text-Black p-1.5': variant === 'switchBtn' && color === 'white',\r\n\r\n        // 'border-White/15 text-White text-style__body3--regular active:scale-95': variant === 'secondary' && grey,\r\n    });\r\n\r\n    const buttonLightClassnames = classNames('absolute  top-0 -left-5 w-2 bg-White -translate-x-4 transition-all duration-300  rotate-[30deg]', {\r\n        'h-25 -translate-y-1/4 group-hover:translate-x-[240px]': variant === 'primary',\r\n\r\n        'h-25 -translate-y-1/4 group-hover:translate-x-[230px]': variant === 'secondary' && (color === 'yellow' || color === 'white'),\r\n        'h-25 -translate-y-1/4 group-hover:translate-x-[320px]': variant === 'primary' && size === 'huge'\r\n    });\r\n\r\n    return (\r\n\r\n        <button className={`${classes} ${className} ${inverted && '[&_svg]:rotate-180'}`} {...rest}>\r\n            <div className={`blick ${buttonLightClassnames}`}></div>\r\n            {children}\r\n            {!children && variant !== 'switchBtn' && 'Your Text Here'}\r\n            {!children && variant === 'switchBtn' && <FiChevronLeft size={24}/>}\r\n        </button>\r\n        \r\n    );\r\n};","import { HiOutlineBriefcase } from 'react-icons/hi';\r\nimport { \r\n    TbBulb, TbDevices, TbBrowser, TbTools, TbChartDots, TbUser, \r\n    TbUsers, TbDeviceLaptop, TbFlame, TbRocket, TbSchool, TbPlayerPlay, \r\n    TbBrandFacebook, TbBrandYoutube, TbBrandInstagram, TbFileText, \r\n    TbDownload, TbFileCertificate, TbFolder, TbClock, TbFileZip, TbSearch\r\n} from 'react-icons/tb';\r\nimport { FiUserCheck, FiChevronLeft, FiChevronRight } from 'react-icons/fi';\r\nimport { BsCheck2 } from 'react-icons/bs';\r\nimport { RiDoubleQuotesR, RiPauseMiniFill } from 'react-icons/ri';\r\nimport classNames from 'classnames';\r\n\r\ninterface IProps {\r\n    name: 'case' | 'bulb' | 'userCheck' | 'devices' | 'browser' | 'tools' | 'dots' | 'user' | 'search' |\r\n    'users' | 'laptop' | 'rocket' | 'school' | 'play' | 'chevroneLeft' | 'chevroneRight' | 'flame' | 'quotes' |\r\n    'facebook' | 'youtube' | 'insta' | 'download' | 'file' | 'certificate' | 'folder' | 'clock' | 'check' | 'zip' | 'pause';\r\n\r\n    size?: 'normal' | 'small';\r\n\r\n    color?: 'grey' | 'blue' | 'yellow' | 'white' | 'black'\r\n    wrapStyle?: 'wrap-normal' | 'wrap-increase' | 'wrap-round-normal' | 'wrap-round-increase';\r\n    wrapColor?: 'grey' | 'blue' | 'yellow' | 'white' | 'transparent-white'\r\n\r\n    autohover?: boolean;\r\n    className?: string;\r\n}\r\nexport const Icon = ({name, size = 'normal', wrapStyle, wrapColor, color, autohover, className}:IProps) => {\r\n\r\n    const classnames = classNames('cursor-pointer inline-block transition-all', {\r\n        'p-3 rounded-xl': wrapStyle ==='wrap-normal',\r\n        'p-4 rounded-xl': wrapStyle ==='wrap-increase',\r\n        'p-1.5 rounded-full': wrapStyle ==='wrap-round-normal',\r\n        'p-3 rounded-full': wrapStyle ==='wrap-round-increase',\r\n\r\n        'text-Grey': color === 'grey',\r\n        'text-Blue': color === 'blue',\r\n        'text-Yellow': color === 'yellow',\r\n        'text-White': color === 'white',\r\n        'text-Black': color === 'black',\r\n\r\n        'bg-White/10': wrapColor === 'transparent-white',\r\n        'bg-White': wrapColor === 'white',\r\n        'bg-GreyLight': wrapColor === 'grey',\r\n        'bg-BlueLight': wrapColor === 'blue',\r\n        'bg-YellowLight': wrapColor === 'yellow',\r\n\r\n        'duration-300': autohover,\r\n\r\n        'hover:bg-White/50': wrapColor === 'transparent-white' && autohover,\r\n        'hover:bg-[#484848]': wrapColor === 'white' && autohover,\r\n        'hover:bg-GreyLight/50': wrapColor === 'grey' && autohover,\r\n        'hover:bg-Blue hover:text-White': wrapColor === 'blue' && autohover,\r\n        'hover:bg-Yellow': wrapColor === 'yellow' && autohover,\r\n        \r\n    });\r\n\r\n    const iconSize = size === 'normal' ? 24 : 16;\r\n\r\n    const IconsName = {\r\n        case: <HiOutlineBriefcase size={iconSize}/>,\r\n        bulb: <TbBulb size={iconSize}/>,\r\n        userCheck: <FiUserCheck size={iconSize}/>,\r\n        users: <TbUsers size={iconSize}/>,\r\n        tools: <TbTools size={iconSize}/>,\r\n        dots: <TbChartDots size={iconSize}/>,\r\n\r\n        laptop: <TbDeviceLaptop size={iconSize}/>,\r\n        devices: <TbDevices size={iconSize}/>,\r\n\r\n        browser: <TbBrowser size={iconSize}/>,\r\n        rocket: <TbRocket size={iconSize}/>,\r\n\r\n        user: <TbUser size={iconSize}/>,\r\n        flame: <TbFlame size={iconSize}/>,\r\n\r\n        school: <TbSchool size={iconSize}/>,\r\n        play: <TbPlayerPlay size={iconSize}/>,\r\n        chevroneLeft: <FiChevronLeft size={iconSize}/>,\r\n        chevroneRight: <FiChevronRight size={iconSize}/>,\r\n        quotes: <RiDoubleQuotesR size={36}/>,\r\n\r\n        facebook: <TbBrandFacebook size={iconSize}/>,\r\n        youtube: <TbBrandYoutube size={iconSize}/>,\r\n        insta: <TbBrandInstagram size={iconSize}/>,\r\n\r\n        download: <TbDownload size={iconSize}/>,\r\n        file: <TbFileText size={iconSize}/>,\r\n        certificate: <TbFileCertificate size={iconSize}/>,\r\n        folder: <TbFolder size={iconSize}/>,\r\n        clock: <TbClock size={iconSize}/>,\r\n        check: <BsCheck2 size={iconSize}/>,\r\n        zip: <TbFileZip size={iconSize}/>,\r\n        pause: <RiPauseMiniFill size={iconSize}/>,\r\n        search: <TbSearch size={iconSize}/>,\r\n    };\r\n\r\n    return (\r\n        <div className={`${className} ${classnames}`}>    \r\n            {IconsName[name]}\r\n        </div>\r\n    );\r\n};","interface IProps {\r\n    elements?: number;\r\n    activeIdx?: number;\r\n}\r\n\r\nexport const Dots = ({activeIdx = 0, elements = 3}: IProps) => {\r\n\r\n    const dotsContentCreator = (idx:number, number:number) => {\r\n        return Array(number).fill('').map((_, index) => index === idx \r\n            ? <li key={index} className=\"w-9 h-2 bg-Blue rounded cursor-pointer\"></li> \r\n            : <li key={index} className=\"w-2 h-2 bg-Grey/10 rounded-full cursor-pointer\"></li>);\r\n    };\r\n\r\n    return (\r\n        <ul className=\"flex gap-3\">\r\n            {dotsContentCreator(activeIdx, elements)}\r\n        </ul>\r\n    );\r\n};","import { Formik, Form, Field } from 'formik';\r\nimport { Icon } from '../Icon/Icon';\r\n\r\ninterface IProps {\r\n    searchBarAction: (searchQuery: string) => void;\r\n}\r\n\r\nexport const SearchBar = ({searchBarAction}: IProps) => {\r\n\r\n    const initialValues = {query: ''};\r\n\r\n    return (\r\n       \r\n        <Formik initialValues={initialValues} onSubmit={(values, {resetForm}) => {\r\n            searchBarAction(values.query);\r\n            resetForm();\r\n        }}>\r\n            <Form className=\"relative\">\r\n                <Field itype={'text'} name=\"query\" placeholder=\"Search for anything\" className=\"h-[64px] w-[800px] bg-White py-5 px-6 outline-none cursor-pointer\"/>\r\n                <button type=\"submit\" className=\"absolute top-1/2 right-0 -translate-x-6 -translate-y-4 hover:[&_svg]:text-Black [&_svg]:transition-all [&_svg]:duration-300 active:scale-95 p-2\">\r\n                    <Icon name=\"search\" color=\"blue\"/>\r\n                </button>\r\n            </Form>\r\n        </Formik>\r\n    );\r\n};","import { Button } from './Button/Button';\r\nimport { useState } from 'react';\r\nimport classNames from 'classnames';\r\nimport { useMakeCurrentCategoriesData } from 'hooks';\r\n\r\ninterface IProps {\r\n    onClick?: (categoryID: string) => void;\r\n    size?: 'normal' | 'reduced'\r\n}\r\n\r\nexport const TabBar = ({onClick, size = 'normal'}: IProps) => {\r\n\r\n    const [ moveSide, setMoveSide ] = useState(false);\r\n    const tabBarData = useMakeCurrentCategoriesData();\r\n\r\n    const handleTabClick = (categoryID: string) => {\r\n        if(onClick) {\r\n            onClick(categoryID);\r\n        }   \r\n    }; \r\n    \r\n    const onMoveBtnClick = (side: boolean) => {\r\n        setMoveSide(side);\r\n    };\r\n\r\n    const tabsPositionClassNames = classNames('absolute z-10 top-0 left-12 flex gap-2 items-center overflow-hidden transition-all duration-1000',{\r\n        '-translate-x-[100px]': moveSide,\r\n        'translate-x-0': !moveSide\r\n    });\r\n    const controlBtnClassNames = 'absolute z-20 top-1/2 -translate-y-1/2 h-[60px] flex-center-center flex-col';\r\n\r\n    const controlBtnRightClassNames = classNames('pl-12 right-0', {\r\n        'tab-bar-home-right-arrow-wrapper': size === 'normal',\r\n        'tab-bar-library-right-arrow-wrapper': size === 'reduced'\r\n    });\r\n    const controlBtnLeftClassNames = classNames('pr-12 left-0', {\r\n        'tab-bar-home-left-arrow-wrapper': size === 'normal',\r\n        'tab-bar-library-left-arrow-wrapper': size === 'reduced'\r\n    });\r\n\r\n    return (\r\n        <div className=\"w-full h-[54px] relative \">\r\n            <div className={`${controlBtnClassNames}, ${controlBtnLeftClassNames}`}>\r\n                <Button type=\"button\" variant=\"switchBtn\" color=\"white\" onClick={() => onMoveBtnClick(true)}/>\r\n            </div>\r\n            <div className=\"w-[1124px] mx-auto h-full relative overflow-hidden\">\r\n                <ul className={tabsPositionClassNames}>\r\n                    {tabBarData.map((item, index) => {\r\n                        return (\r\n                            <li key={`${item}/${index}`}>\r\n                                <Button type=\"button\" \r\n                                    onClick={() => handleTabClick(item.categoryID)} \r\n                                    variant=\"secondary\" \r\n                                    size=\"mediumLarge\" \r\n                                    color=\"white\" \r\n                                    className=\"whitespace-nowrap btn-in-set-border [&_div]:opacity-0 hover:bg-Grey/10 [&_button]:border-BtnBorderGrey\">\r\n                                    {item.name}\r\n                                </Button>\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            </div>\r\n            <div className={`${controlBtnClassNames}, ${controlBtnRightClassNames}`}>\r\n                <Button type=\"button\" variant=\"switchBtn\" color=\"white\" inverted onClick={() => onMoveBtnClick(false)}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};","\r\nexport const PopularMark = () => {\r\n\r\n    return (\r\n        <span className=\"py-1.5 px-4 rounded-3xl bg-Blue text-style__body3--regular text-White\">Popular</span>\r\n    );\r\n\r\n};","import { BsStarFill, BsStarHalf } from 'react-icons/bs';\r\n\r\ninterface IProps {\r\n    rating: number;\r\n}\r\n\r\nexport const RatingStars = ({rating}: IProps) => {\r\n\r\n    const roundedRating = Number(Math.floor(rating));\r\n\r\n    return (\r\n        <div className=\"flex items-center gap-2\">\r\n            <span className=\"text-style__body2--bold text-YellowLight\">{rating}{Number.isInteger(rating) && '.0'}</span>\r\n            <div>\r\n                <ul className=\"flex gap-1\">\r\n                    {Array(roundedRating).fill('').map((_, idx) => <li key={idx} className=\"text-Yellow\">{<BsStarFill size={16}/>}</li>)}\r\n                    {Number.isInteger(rating) === false && <li className=\"text-Yellow\">{<BsStarHalf size={16}/>}</li>}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};","\r\nimport { Icon } from '../Icon/Icon';\r\nimport { PopularMark } from '../PopularMark/PopularMark';\r\nimport { RatingStars } from '../RatingStars/RatingStars';\r\nimport classNames from 'classnames';\r\n\r\ninterface IProps {\r\n    poster_path: string;\r\n    popularity: number;\r\n    title: string;\r\n    author: string;\r\n    total_lessons: number;\r\n    popularity_tag: boolean;\r\n    isDark?: boolean;\r\n    baseUrl: string;\r\n}\r\n\r\nexport const CoursesListItem = ({ poster_path, popularity, popularity_tag, author, title, total_lessons, isDark = false, baseUrl}: IProps) => {\r\n\r\n    const titleClasses = classNames('text-style__body2--bold mb-1.5', {\r\n        ' text-White': isDark,\r\n        ' text-Black': isDark === false,\r\n    });\r\n\r\n    return (\r\n        \r\n        <>\r\n            <div className=\"w-full flex flex-col items-start\">\r\n                <div className=\"img-wrapper  flex-center-center w-full h-[184px] overflow-hidden mb-4 group cursor-pointer\">\r\n                    <img src={`${baseUrl ? baseUrl : ''}${poster_path}`} alt=\"software wallpaper\"  className=\"w-full h-full object-cover mx-auto group-hover:scale-110 transition-all duration-300\"/>\r\n                </div>\r\n\r\n                <div className=\"mb-2\">\r\n                    <RatingStars rating={popularity}/>\r\n                </div>\r\n\r\n                <span className={titleClasses}>{title}</span>\r\n\r\n                <ul className=\"text-style__body3--regular text-Grey flex items-start gap-4\">\r\n                    <li className=\"flex gap-1.5\">\r\n                        <span><Icon size=\"small\" name=\"user\"/></span>\r\n                        <span>{author}</span>\r\n                    </li>\r\n                    <li className=\"flex gap-1.5\">\r\n                        <span><Icon size=\"small\" name=\"play\"/></span>\r\n                        <span>{total_lessons} lessons</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            {popularity_tag && <div className=\"absolute top-4 left-4\"><PopularMark/></div>}\r\n        </>\r\n    );\r\n};","import { ICourseGeneral } from 'interfaces';\r\nimport { CoursesListItem } from './CoursesListItem';\r\nimport { Link } from 'react-router-dom';\r\nimport { baseUrl } from 'constatnts/baseUrl';\r\n\r\ninterface IProps {\r\n    data: ICourseGeneral[] | null;\r\n    isDark?: boolean;\r\n}\r\nexport const CoursesList = ({data, isDark = false}: IProps) => {\r\n\r\n    return (\r\n        <ul className=\"flex flex-wrap gap-8 w-full\">\r\n            {data && data.map(({author, popularity, id, poster_path, title, total_lessons, popularity_tags}) => {\r\n                return(\r\n                    <li key={title} className=\"w-70 relative\">\r\n                        <Link to={`/course/${id}`} style={{width: '100%'}}>\r\n                            <CoursesListItem\r\n                                author={author}\r\n                                popularity={popularity}\r\n                                poster_path={poster_path.ratio_normal}\r\n                                title={title}\r\n                                total_lessons={total_lessons}\r\n                                popularity_tag={popularity_tags.includes('popular')}\r\n                                isDark={isDark}\r\n                                baseUrl={baseUrl}\r\n                            />\r\n                        </Link>\r\n                    </li>\r\n                );\r\n            })}\r\n        </ul>\r\n    );\r\n};","import ReactPlayer from 'react-player';\r\nimport { useAppDispatch, useAppSelector } from 'hooks';\r\nimport { useRef } from 'react';\r\nimport { addLessInfoOnPlay, addPausedFlagOnPause, addCurrentTimeOnProgress, addFinishedFlagOnEnd  } from 'store';\r\nimport { useParams } from 'react-router-dom';\r\n\r\ninterface IProps {\r\n    link: string;\r\n}\r\n\r\nexport const Player = ({link}: IProps) => {\r\n    const dispatch = useAppDispatch();\r\n    const { courseId, lesson } = useParams();\r\n\r\n    const lessUniqueId = `${courseId}/${lesson}`;\r\n    const userLessonData = useAppSelector(state => state.userProgressClientData.lessons_progress.find(item => item.lessonId === lessUniqueId));\r\n    \r\n    const refPlayer = useRef<ReactPlayer>(null);\r\n    \r\n    return (\r\n\r\n        <ReactPlayer\r\n            ref={refPlayer}\r\n            url={link}\r\n            width=\"100%\"\r\n            height=\"100%\" \r\n            controls\r\n            playing={true}\r\n            progressInterval={3000}\r\n\r\n            onPlay={() => {\r\n                dispatch(addLessInfoOnPlay(lessUniqueId));\r\n                \r\n            }}\r\n\r\n            onPause={() => {\r\n                dispatch(addPausedFlagOnPause(lessUniqueId));\r\n            }}\r\n\r\n            onEnded={() => {\r\n                dispatch(addFinishedFlagOnEnd(lessUniqueId));\r\n            }}\r\n\r\n            onProgress={(event) => {\r\n                dispatch(addCurrentTimeOnProgress({lessonId: lessUniqueId,  progressTime: Math.floor(event.playedSeconds)}));\r\n            }}\r\n\r\n            onReady={() => {\r\n                if(userLessonData?.progressTime) {\r\n                    refPlayer?.current?.seekTo(userLessonData?.progressTime);\r\n                } else {\r\n                    refPlayer?.current?.seekTo(0);\r\n                }\r\n            }}\r\n        /> \r\n\r\n    );\r\n};","\r\nimport { currentPrimaryCategoriesSet, primaryCategories } from 'constatnts/primaryCategories';\r\nimport { useEffect, useState } from 'react';\r\n\r\ninterface IProps {\r\n    onSelectAction: (category: string) => void;\r\n    currentCategoryId?: string;\r\n}\r\n\r\nexport const CategorySelect = ({onSelectAction, currentCategoryId}: IProps) => {\r\n\r\n    const [isSelectListOpen, setIsSelectListOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (currentCategoryId === '') {\r\n            onSelectAction('000000101');\r\n        }\r\n        \r\n    },[currentCategoryId, onSelectAction]);\r\n\r\n    return (\r\n        <div className=\"custom-select inline-block w-full\"> \r\n            <button type=\"button\" className=\"custom-select__button\" onClick={() => setIsSelectListOpen(!isSelectListOpen)}>\r\n                <p>{primaryCategories.find(item => item.categoryID === currentCategoryId)?.name}</p>\r\n            </button>\r\n            \r\n            {isSelectListOpen && <ul className=\"custom-select__list inline-block absolute top-10 border border-Grey left-0 bg-White text z-50  pb-3\r\n            e rounded-xl shadow-bannerShadow text-style__body2--medium min-w-[200px] overflow-hidden animate-selectListAppear\">\r\n                {\r\n                    currentPrimaryCategoriesSet.map((item, index) => {\r\n\r\n                        if (item === currentCategoryId) {\r\n                            return false;\r\n                        }\r\n                        return (\r\n                            <li key={index} className=\"custom-select__item text-start px-4 py-3 cursor-pointer hover:bg-Blue/40\" onClick={() => {\r\n                                onSelectAction(item);\r\n                                setIsSelectListOpen(false);\r\n                            }}>\r\n                                {primaryCategories.find(el => el.categoryID === item)?.name}\r\n                            </li>\r\n                        );\r\n                    })\r\n                }\r\n            </ul>}\r\n        </div>\r\n    );\r\n};","import Skeleton from 'react-loading-skeleton';\r\nimport 'react-loading-skeleton/dist/skeleton.css';\r\n\r\ninterface IProps {\r\n    itemsAmount?: number;\r\n    isDark?: boolean;\r\n}\r\nexport const CourseListPreloader = ({isDark = false, itemsAmount = 4}: IProps) => {\r\n\r\n    const loaderArray = Array(itemsAmount).fill('');\r\n\r\n    const customSkeleton = (height: number) => {\r\n        return <Skeleton height={height}  baseColor={isDark ? '#454647' : '#ebebeb'} highlightColor={isDark ? '#606263' : '#f5f5f5'}/>;\r\n    };\r\n\r\n    return (\r\n        <ul className=\"flex flex-wrap gap-8 w-full\">\r\n            {loaderArray.map((item, index) => {\r\n                return(\r\n                    <li key={index} className=\"flex flex-col items-start w-70\">\r\n                       \r\n                        <div className=\"img-wrapper w-full mb-4 overflow-hidden rounded\">\r\n                            {customSkeleton(184)}\r\n                        </div>\r\n\r\n                        <div className=\"rating-stars w-30 mb-2\">\r\n                            {customSkeleton(24)}\r\n                        </div>\r\n\r\n                        <span className=\"title w-64\">\r\n                            {customSkeleton(24)}\r\n                        </span>\r\n\r\n                        <ul className=\"flex items-start gap-4\">\r\n                            <li className=\"w-30 flex gap-1.5\">\r\n                                <span className=\"icon w-4\">{customSkeleton(24)}</span>\r\n                                <span className=\"author w-25\">{customSkeleton(24)}</span>\r\n                            </li>\r\n                            <li className=\"w-22 flex gap-1.5\">\r\n                                <span className=\"icon w-4\">{customSkeleton(24)}</span>\r\n                                <span className=\"lessons w-16\">{customSkeleton(24)}</span>\r\n                            </li>\r\n                        </ul>\r\n                  \r\n                    </li>\r\n                );\r\n            })}\r\n        </ul>\r\n    );\r\n};","import { createPortal } from 'react-dom';\r\nimport { ReactNode } from 'react';\r\n\r\ninterface IProps {\r\n    children?: ReactNode;\r\n    backDropAction?: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void\r\n}\r\nexport const ModalWindowBackdrop = ({children, backDropAction}: IProps) => {\r\n    \r\n    const modalBackdropRoot = document.querySelector('#modal-backdrop-root') as HTMLDivElement;\r\n\r\n    const handleBackDropCLick = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n        if (backDropAction) {\r\n            backDropAction(event);\r\n        }\r\n    };\r\n    \r\n    return createPortal (\r\n        <div className=\"fixed top-0 right-0 bottom-0 left-0 bg-Black/60 z-40\" onClick={handleBackDropCLick}>\r\n            {children}\r\n        </div>, modalBackdropRoot\r\n    );\r\n};","import classNames from 'classnames';\r\n\r\ninterface IProps {\r\n    textStyle?: 'dark' | 'light'\r\n}\r\n\r\nexport const CoursesEmptyPlugIn = ({textStyle = 'dark'}: IProps) => {\r\n\r\n    const textClassnames = classNames('[&_span]:text-Blue', {\r\n        'text-Black': textStyle === 'dark',\r\n        'text-White': textStyle === 'light'\r\n\r\n    });\r\n\r\n    return (\r\n        <div className=\"h-[283px] no-courses-by-category-wallpaper\">\r\n            <div className=\"w-1/2 pt-10\">\r\n                <h2 className={textClassnames}><span>Courses with a given category</span> will appear soon</h2>\r\n            </div>\r\n        </div>\r\n    );\r\n};"],"names":["Banner","children","variant","size","childrenArr","Children","className","Button","color","inverted","rest","Error","classes","classNames","buttonLightClassnames","Icon","name","wrapStyle","wrapColor","autohover","classnames","iconSize","IconsName","case","bulb","userCheck","users","tools","dots","laptop","devices","browser","rocket","user","flame","school","play","chevroneLeft","chevroneRight","quotes","facebook","youtube","insta","download","file","certificate","folder","clock","check","zip","pause","search","Dots","idx","number","activeIdx","elements","Array","fill","map","_","index","SearchBar","searchBarAction","initialValues","query","onSubmit","values","resetForm","itype","placeholder","type","TabBar","onClick","useState","moveSide","setMoveSide","tabBarData","useMakeCurrentCategoriesData","handleTabClick","categoryID","onMoveBtnClick","side","tabsPositionClassNames","controlBtnClassNames","controlBtnRightClassNames","controlBtnLeftClassNames","item","PopularMark","RatingStars","rating","roundedRating","Number","Math","floor","isInteger","CoursesListItem","poster_path","popularity","popularity_tag","author","title","total_lessons","isDark","baseUrl","titleClasses","src","alt","CoursesList","data","id","popularity_tags","to","style","width","ratio_normal","includes","Player","link","dispatch","useAppDispatch","useParams","courseId","lesson","lessUniqueId","userLessonData","useAppSelector","state","userProgressClientData","lessons_progress","find","lessonId","refPlayer","useRef","ref","url","height","controls","playing","progressInterval","onPlay","addLessInfoOnPlay","onPause","addPausedFlagOnPause","onEnded","addFinishedFlagOnEnd","onProgress","event","addCurrentTimeOnProgress","progressTime","playedSeconds","onReady","current","seekTo","CategorySelect","onSelectAction","currentCategoryId","isSelectListOpen","setIsSelectListOpen","useEffect","primaryCategories","currentPrimaryCategoriesSet","el","CourseListPreloader","itemsAmount","loaderArray","customSkeleton","baseColor","highlightColor","ModalWindowBackdrop","backDropAction","modalBackdropRoot","document","querySelector","createPortal","CoursesEmptyPlugIn","textStyle","textClassnames"],"sourceRoot":""}