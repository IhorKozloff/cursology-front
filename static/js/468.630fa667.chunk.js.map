{"version":3,"file":"static/js/468.630fa667.chunk.js","mappings":"mMAOaA,EAAqB,SAAH,GAA+C,IAA1CC,EAAc,EAAdA,eAAgBC,EAAW,EAAXA,YAEhD,OACI,oBAASC,UAAU,+CAA8C,UAC7D,iBAAKA,UAAU,6DAA4D,WACvE,eAAIA,UAAU,yCAAwC,SAAC,0DACvD,gBAAKA,UAAU,QAAO,UAClB,SAAC,KAAS,CAACC,gBAAiBH,OAEhC,SAAC,KAAM,CAACI,QAASH,QAIjC,E,8BCfaI,EAA2B,WAEpC,OAAuCC,EAAAA,EAAAA,MAA/BC,EAAe,EAAfA,gBAAiBC,EAAS,EAATA,UACzB,GAAsCC,EAAAA,EAAAA,UAAS,GAAE,eAA1CC,EAAW,KAAEC,EAAc,KAQlC,OACI,oBAAST,UAAU,sCAAqC,UACpD,iBAAKA,UAAU,YAAW,WACtB,iBAAKA,UAAU,wCAAuC,WAClD,eAAIA,UAAU,OAAM,SAAC,yBACrB,SAAC,KAAM,CAACU,KAAK,SAASC,QAAQ,WAAWT,QAX/B,WAClBG,GACAI,EAA8B,OAAfJ,QAAe,IAAfA,OAAe,EAAfA,EAAiBO,OAExC,EAOoF,SAAC,mBAExEP,IAAoBC,IAAa,SAAC,KAAW,CAACO,MAAMC,EAAAA,EAAAA,IAAwBT,EAAiBG,KAC7FF,IAAa,SAAC,KAAmB,QAIlD,ECvBaS,EAAyB,WAElC,OAAmCC,EAAAA,EAAAA,MAA3BC,EAAW,EAAXA,YAAaX,EAAS,EAATA,UACrB,GAAsCC,EAAAA,EAAAA,UAAS,GAAE,eAA1CC,EAAW,KAAEC,EAAc,KAQlC,OACI,oBAAST,UAAU,sCAAqC,UACpD,iBAAKA,UAAU,YAAW,WACtB,iBAAKA,UAAU,wCAAuC,WAClD,eAAIA,UAAU,OAAM,SAAC,0BACrB,SAAC,KAAM,CAACU,KAAK,SAASC,QAAQ,WAAWT,QAX/B,WAClBe,GACAR,EAA0B,OAAXQ,QAAW,IAAXA,OAAW,EAAXA,EAAaL,OAEpC,EAOoF,SAAC,mBAExEK,IAAgBX,IAAa,SAAC,KAAW,CAACO,MAAMC,EAAAA,EAAAA,IAAwBG,EAAaT,KACrFF,IAAa,SAAC,KAAmB,QAIlD,ECfaY,EAA8B,SAAH,GAA8B,IAAzBC,EAAU,EAAVA,WAEzC,GAAsCZ,EAAAA,EAAAA,UAAS,GAAE,eAA1CC,EAAW,KAAEC,EAAc,KAQlC,OACI,oBAAST,UAAU,sCAAqC,UACpD,iBAAKA,UAAU,YAAW,WACtB,iBAAKA,UAAU,wCAAuC,WAClD,gBAAKA,UAAU,GAAE,UACb,gBAAIA,UAAU,+BAA8B,UAAC,kBAEzC,iBAAMA,UAAU,qBAAoB,UAChC,SAAC,KAAc,CAACoB,eAAgBD,EAAWpB,YAAasB,kBAAmBF,EAAWG,kBAKjGH,EAAWN,MAAQM,EAAWN,KAAKD,OAAS,IAAK,SAAC,KAAM,CAACF,KAAK,SAASC,QAAQ,WAAWT,QAnBjF,WACA,IAAD,EAAjBiB,EAAWN,MACXJ,EAA8B,QAAhB,EAACU,EAAWN,YAAI,aAAf,EAAiBD,OAExC,EAesI,SAAC,mBAE1HO,EAAWN,MAAmC,IAA3BM,EAAWN,KAAKD,SAAiBO,EAAWb,YAAa,SAAC,KAAW,CAACO,MAAMC,EAAAA,EAAAA,IAAwBK,EAAWN,KAAML,KACxIW,EAAWb,YAAa,SAAC,KAAmB,IAC5Ca,EAAWN,MAAmC,IAA3BM,EAAWN,KAAKD,SAAiB,SAAC,KAAkB,QAIxF,ECpCaW,EAA6B,SAAH,GAAiD,IAA5CC,EAAa,EAAbA,cAAe1B,EAAc,EAAdA,eAEjD2B,EAAqB,WACvB3B,EAAe,GACnB,EAEA,OAEI,oBAASE,UAAU,sCAAqC,UACpD,iBAAKA,UAAU,qBAAoB,UACL,IAAzBwB,EAAcZ,SACf,iCACI,iBAAKZ,UAAU,wCAAuC,WAClD,eAAIA,UAAU,OAAM,SAAC,0BACrB,SAAC,KAAM,CAACU,KAAK,SAASC,QAAQ,WAAWT,QAASuB,EAAmB,SAAC,sBAE1E,SAAC,KAAW,CAACZ,KAAMW,OAIG,IAAzBA,EAAcZ,SACX,iBAAKZ,UAAU,iEAAgE,WAC3E,gBAAKA,UAAU,uFAAsF,UACjG,wBAAI,sCAER,SAAC,KAAM,CAACU,KAAK,SAASC,QAAQ,WAAWT,QAASuB,EAAmB,SAAC,iBAM9F,E,UChCaC,EAAmB,SAAH,GAAiD,IAA3CC,EAAiB,EAAjBA,kBAAmBC,EAAQ,EAARA,SAE5CC,EAAkBC,EAAAA,EAAAA,MAAuB,SAAAC,GAAI,OAAIA,EAAKC,aAAeL,CAAiB,IAE5F,OACI,oBAAS3B,UAAU,0BAAyB,UACxC,gBAAKA,UAAU,YAAW,UACtB,eAAIA,UAAU,uBAAsB,SAChB,OAAf6B,QAAe,IAAfA,OAAe,EAAfA,EAAiBI,kBAAkBC,KAAI,YAA6B,IAA3BC,EAAU,EAAVA,WAAYC,EAAQ,EAARA,SAClD,OACI,yBACI,mBACIpC,UAAU,iIACVU,KAAK,SACLR,QAAS,kBAAM0B,EAASQ,EAAS,EAAC,SAEjCD,KANAA,EAUjB,SAKpB,EC1Be,SAASE,IAEpB,OAAsC9B,EAAAA,EAAAA,UAAS,IAAG,eAA3C+B,EAAW,KAAExC,EAAc,KAC5B0B,GAAgBe,EAAAA,EAAAA,IAAoBD,GAEpCE,GAASC,EAAAA,EAAAA,MAEf,OACI,iCACI,SAAC5C,EAAkB,CAACC,eAAgBA,EAAgBC,YAAayC,EAAOzC,cACvEyB,GAAiC,KAAhBc,IAAsB,SAACf,EAA0B,CAACC,cAAeA,EAAe1B,eAAgBA,KAClH,SAACK,EAAwB,KACzB,SAACY,EAAsB,KACvB,SAACW,EAAgB,CAACC,kBAAmBa,EAAOlB,SAAUM,SAAUY,EAAOZ,YACvE,SAACV,EAA2B,CAACC,WAAYqB,KACzC,SAAC,KAAM,MAGnB,C","sources":["components/CoursesLibrary/CoursesLibraryHero.tsx","components/CoursesLibrary/CourseLibraryRecommended.tsx","components/CoursesLibrary/CoursesLibraryWatching.tsx","components/CoursesLibrary/CoursesLibraryTopInCategory.tsx","components/CoursesLibrary/CoursesLibrarySearchResult.tsx","components/CoursesLibrary/CoursesTopicsBar.tsx","pages/CoursesLibrary.tsx"],"sourcesContent":["import { SearchBar, TabBar } from 'components/ReusableComponents';\r\n\r\ninterface IProps {\r\n    setSearchQuery: (query: string) => void;\r\n    setCategory: (category: string) => void;\r\n}\r\n\r\nexport const CoursesLibraryHero = ({setSearchQuery, setCategory}: IProps) => {\r\n\r\n    return (\r\n        <section className=\"background-custom-gradient-black pt-18 pb-28\">\r\n            <div className=\"container flex-center-center pb-2 flex-col overflow-hidden\">\r\n                <h3 className=\"pb-14 w-[500px] text-center text-White\">Find a course to help you reach where you want to go</h3>\r\n                <div className=\"mb-12\">\r\n                    <SearchBar searchBarAction={setSearchQuery}/>\r\n                </div>\r\n                <TabBar onClick={setCategory}/>\r\n            </div>\r\n        </section>\r\n    );\r\n}; ","import { Button, CourseListPreloader, CoursesList } from 'components';\r\nimport { getRandomItemsFromArray } from 'heplers';\r\nimport { useState } from 'react';\r\nimport { useRecomended } from 'hooks';\r\n\r\nexport const CourseLibraryRecommended = () => {\r\n\r\n    const { recommendedData, isLoading } = useRecomended();\r\n    const [amountItems, setAmountItems] = useState(4);\r\n\r\n    const exploreAllHandler = () => {\r\n        if (recommendedData) {\r\n            setAmountItems(recommendedData?.length);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <section className=\"library-page__recomended pt-18 pb-6\">\r\n            <div className=\"container\">\r\n                <div className=\"flex items-start justify-between mb-8\">\r\n                    <h4 className=\"mt-1\">Recommended for you</h4>\r\n                    <Button type=\"button\" variant=\"tertiary\" onClick={exploreAllHandler}>Explore all</Button>\r\n                </div>\r\n                {recommendedData && !isLoading && <CoursesList data={getRandomItemsFromArray(recommendedData, amountItems)}/>}\r\n                {isLoading && <CourseListPreloader/>}\r\n            </div>\r\n        </section>\r\n    );\r\n};","import { useState } from 'react';\r\nimport { Button, CoursesList, CourseListPreloader } from 'components';\r\nimport { getRandomItemsFromArray } from 'heplers';\r\nimport { useViewing } from 'hooks';\r\n\r\nexport const CoursesLibraryWatching = () => {\r\n\r\n    const { viewingData, isLoading } = useViewing();\r\n    const [amountItems, setAmountItems] = useState(4);\r\n\r\n    const exploreAllHandler = () => {\r\n        if (viewingData) {\r\n            setAmountItems(viewingData?.length);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <section className=\"library-page__recomended pt-18 pb-6\">\r\n            <div className=\"container\">\r\n                <div className=\"flex items-start justify-between mb-8\">\r\n                    <h4 className=\"mt-1\">Students are viewing</h4>\r\n                    <Button type=\"button\" variant=\"tertiary\" onClick={exploreAllHandler}>Explore all</Button>\r\n                </div>\r\n                {viewingData && !isLoading && <CoursesList data={getRandomItemsFromArray(viewingData, amountItems)}/>}\r\n                {isLoading && <CourseListPreloader/>}\r\n            </div>\r\n        </section>\r\n    );\r\n};","import { CoursesList, Button, CategorySelect, CourseListPreloader, CoursesEmptyPlugIn } from 'components';\r\nimport { useState } from 'react';\r\nimport { getRandomItemsFromArray } from 'heplers';\r\nimport { ICourseGeneral } from 'interfaces';\r\n\r\ninterface IProps {\r\n    renderData: {\r\n        data: ICourseGeneral[] | undefined;\r\n        category: string;\r\n        setCategory: (category: string) => void;\r\n        isLoading: boolean;\r\n    }\r\n}\r\nexport const CoursesLibraryTopInCategory = ({renderData}: IProps) => {\r\n\r\n    const [amountItems, setAmountItems] = useState(4);\r\n\r\n    const exploreAllHandler = () => {\r\n        if (renderData.data) {\r\n            setAmountItems(renderData.data?.length);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <section className=\"library-page__recomended pt-18 pb-6\">\r\n            <div className=\"container\">\r\n                <div className=\"flex items-start justify-between mb-8\">\r\n                    <div className=\"\">\r\n                        <h4 className=\"mt-1 flex items-center gap-2\">\r\n                            Top courses in\r\n                            <span className=\"text-Blue relative\">\r\n                                <CategorySelect onSelectAction={renderData.setCategory} currentCategoryId={renderData.category}/>\r\n                            </span>\r\n                        </h4>\r\n                        \r\n                    </div>\r\n                    {renderData.data && renderData.data.length > 4 && <Button type=\"button\" variant=\"tertiary\" onClick={exploreAllHandler}>Explore all</Button>}\r\n                </div>\r\n                {renderData.data && renderData.data.length !== 0 && !renderData.isLoading && <CoursesList data={getRandomItemsFromArray(renderData.data, amountItems)}/>}\r\n                {renderData.isLoading && <CourseListPreloader/>}\r\n                {renderData.data && renderData.data.length === 0  && <CoursesEmptyPlugIn/> }\r\n            </div>\r\n        </section>\r\n    );\r\n};","import { Button, CoursesList } from 'components';\r\nimport { ICourseGeneral } from 'interfaces';\r\n\r\ninterface IProps {\r\n    searchingData: ICourseGeneral[];\r\n    setSearchQuery: (query: string) => void;\r\n}\r\n\r\nexport const CoursesLibrarySearchResult = ({searchingData, setSearchQuery}: IProps) => {\r\n\r\n    const handleResetResults = () => {\r\n        setSearchQuery('');\r\n    };\r\n\r\n    return (\r\n\r\n        <section className=\"library-page__recomended pt-18 pb-6\">\r\n            <div className=\"container relative\">\r\n                {searchingData.length !== 0 &&\r\n                <>\r\n                    <div className=\"flex items-start justify-between mb-8\">\r\n                        <h4 className=\"mt-1\">Found by your search</h4>\r\n                        <Button type=\"button\" variant=\"tertiary\" onClick={handleResetResults}>Reset results</Button>\r\n                    </div>\r\n                    <CoursesList data={searchingData}/>\r\n                </>\r\n                }\r\n             \r\n                {searchingData.length === 0 && \r\n                    <div className=\"no-results-wallpaper w-full h-110 flex items-start justify-end\">\r\n                        <div className=\"absolute top-1/2 left-1/2 -translate-x-1/2 translate-y-1/2 p-5 rounded-full bg-White\">\r\n                            <h2>Nothing found for your request</h2>\r\n                        </div>\r\n                        <Button type=\"button\" variant=\"tertiary\" onClick={handleResetResults}>Reset</Button>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </section>\r\n    );\r\n};","import { primaryCategories } from 'constatnts/primaryCategories'; \r\n\r\ninterface IProps {\r\n    primaryCategoryId: string;\r\n    setTopic: (topic: string) => void; \r\n}\r\n\r\nexport const CoursesTopicsBar = ({ primaryCategoryId, setTopic }: IProps) => {\r\n\r\n    const currentCategory = primaryCategories.find(item => item.categoryID === primaryCategoryId);\r\n    \r\n    return (\r\n        <section className=\"topics-group pt-18 pb-6\">\r\n            <div className=\"container\">\r\n                <ul className=\"flex gap-8 flex-wrap\">\r\n                    {currentCategory?.recomended_topics.map(({topic_name, topic_id}) => {\r\n                        return (\r\n                            <li key={topic_name}>\r\n                                <button \r\n                                    className=\"w-70 h-16 flex-center-center rounded text-style__body2--bold text-Blue border border-Black/10 hover:bg-Blue/10 active:scale-95\" \r\n                                    type=\"button\"\r\n                                    onClick={() => setTopic(topic_id)}\r\n                                >\r\n                                    {topic_name}\r\n                                </button>\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </section>\r\n    );\r\n};","import { Footer } from 'components';\r\nimport { CoursesLibraryHero, CourseLibraryRecommended, CoursesLibraryWatching, CoursesLibraryTopInCategory, CoursesTopicsBar, CoursesLibrarySearchResult } from 'components/CoursesLibrary';\r\n\r\nimport { useGetSearchingData, useFiltredCoursesByCategory } from 'hooks';\r\nimport { useState } from 'react';\r\n\r\nexport default function CoursesLibrary () {\r\n\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const searchingData = useGetSearchingData(searchQuery);\r\n\r\n    const result = useFiltredCoursesByCategory();\r\n\r\n    return (\r\n        <>\r\n            <CoursesLibraryHero setSearchQuery={setSearchQuery} setCategory={result.setCategory}/>\r\n            {searchingData && searchQuery !== '' && <CoursesLibrarySearchResult searchingData={searchingData} setSearchQuery={setSearchQuery}/>}\r\n            <CourseLibraryRecommended/>\r\n            <CoursesLibraryWatching/>\r\n            <CoursesTopicsBar primaryCategoryId={result.category} setTopic={result.setTopic}/>\r\n            <CoursesLibraryTopInCategory renderData={result}/>\r\n            <Footer/>\r\n        </>\r\n    );\r\n}"],"names":["CoursesLibraryHero","setSearchQuery","setCategory","className","searchBarAction","onClick","CourseLibraryRecommended","useRecomended","recommendedData","isLoading","useState","amountItems","setAmountItems","type","variant","length","data","getRandomItemsFromArray","CoursesLibraryWatching","useViewing","viewingData","CoursesLibraryTopInCategory","renderData","onSelectAction","currentCategoryId","category","CoursesLibrarySearchResult","searchingData","handleResetResults","CoursesTopicsBar","primaryCategoryId","setTopic","currentCategory","primaryCategories","item","categoryID","recomended_topics","map","topic_name","topic_id","CoursesLibrary","searchQuery","useGetSearchingData","result","useFiltredCoursesByCategory"],"sourceRoot":""}